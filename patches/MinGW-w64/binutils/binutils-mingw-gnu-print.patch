diff -urN binutils-2.33.1_orig/bfd/bfd-in.h binutils-2.33.1/bfd/bfd-in.h
--- binutils-2.33.1_orig/bfd/bfd-in.h	2019-09-09 21:19:43.000000000 +0800
+++ binutils-2.33.1/bfd/bfd-in.h	2019-11-24 11:46:10.000000000 +0800
@@ -158,7 +158,7 @@
 
 #if BFD_HOST_64BIT_LONG
 #define BFD_VMA_FMT "l"
-#elif defined (__MSVCRT__)
+#elif defined (__MSVCRT__) && !defined( __USE_MINGW_ANSI_STDIO)
 #define BFD_VMA_FMT "I64"
 #else
 #define BFD_VMA_FMT "ll"
diff -urN binutils-2.33.1_orig/bfd/bfd-in2.h binutils-2.33.1/bfd/bfd-in2.h
--- binutils-2.33.1_orig/bfd/bfd-in2.h	2019-09-09 21:19:43.000000000 +0800
+++ binutils-2.33.1/bfd/bfd-in2.h	2019-11-24 11:46:10.000000000 +0800
@@ -165,7 +165,7 @@
 
 #if BFD_HOST_64BIT_LONG
 #define BFD_VMA_FMT "l"
-#elif defined (__MSVCRT__)
+#elif defined (__MSVCRT__) && !defined(__USE_MINGW_ANSI_STDIO)
 #define BFD_VMA_FMT "I64"
 #else
 #define BFD_VMA_FMT "ll"
diff -urN binutils-2.33.1_orig/binutils/dwarf.c binutils-2.33.1/binutils/dwarf.c
--- binutils-2.33.1_orig/binutils/dwarf.c	2019-09-25 15:50:50.000000000 +0800
+++ binutils-2.33.1/binutils/dwarf.c	2019-11-24 11:46:10.000000000 +0800
@@ -201,7 +201,7 @@
 }
 
 #if defined HAVE_LONG_LONG && SIZEOF_LONG_LONG > SIZEOF_LONG
-# ifndef __MINGW32__
+#if !defined(__MSVCRT__) || defined(__USE_MINGW_ANSI_STDIO)
 #  define DWARF_VMA_FMT		"ll"
 #  define DWARF_VMA_FMT_LONG	"%16.16llx"
 # else
diff -urN binutils-2.33.1_orig/binutils/nm.c binutils-2.33.1/binutils/nm.c
--- binutils-2.33.1_orig/binutils/nm.c	2019-09-25 15:50:50.000000000 +0800
+++ binutils-2.33.1/binutils/nm.c	2019-11-24 11:46:10.000000000 +0800
@@ -1243,7 +1243,7 @@
 #if BFD_HOST_64BIT_LONG
       ;
 #elif BFD_HOST_64BIT_LONG_LONG
-#ifndef __MSVCRT__
+#if !defined(__MSVCRT__) || defined(__USE_MINGW_ANSI_STDIO)
       length = "ll";
 #else
       length = "I64";
diff -urN binutils-2.33.1_orig/binutils/prdbg.c binutils-2.33.1/binutils/prdbg.c
--- binutils-2.33.1_orig/binutils/prdbg.c	2019-09-09 21:19:43.000000000 +0800
+++ binutils-2.33.1/binutils/prdbg.c	2019-11-24 11:46:10.000000000 +0800
@@ -504,7 +504,7 @@
 #if BFD_HOST_64BIT_LONG_LONG
   else if (sizeof (vma) <= sizeof (unsigned long long))
     {
-#ifndef __MSVCRT__
+#if !defined(__MSVCRT__) || defined(__USE_MINGW_ANSI_STDIO)
       if (hexp)
 	sprintf (buf, "0x%llx", (unsigned long long) vma);
       else if (unsignedp)
diff -urN binutils-2.33.1_orig/binutils/readelf.c binutils-2.33.1/binutils/readelf.c
--- binutils-2.33.1_orig/binutils/readelf.c	2019-10-09 15:16:05.000000000 +0800
+++ binutils-2.33.1/binutils/readelf.c	2019-11-24 11:46:10.000000000 +0800
@@ -1243,7 +1243,7 @@
 		  : "%12.12lx  %12.12lx ",
 		  offset, inf);
 #elif BFD_HOST_64BIT_LONG_LONG
-#ifndef __MSVCRT__
+#if !defined(__MSVCRT__) || defined(__USE_MINGW_ANSI_STDIO)
 	  printf (do_wide
 		  ? "%16.16llx  %16.16llx "
 		  : "%12.12llx  %12.12llx ",
@@ -13706,7 +13706,7 @@
 	{
 	  size_t maxlen = end - data;
 
-#ifndef __MSVCRT__
+#if !defined(__MSVCRT__) || defined(__USE_MINGW_ANSI_STDIO)
 	  /* PR 11128: Use two separate invocations in order to work
              around bugs in the Solaris 8 implementation of printf.  */
 	  printf ("  [%6tx]  ", data - start);
diff -urN binutils-2.33.1_orig/binutils/strings.c binutils-2.33.1/binutils/strings.c
--- binutils-2.33.1_orig/binutils/strings.c	2019-09-09 21:19:43.000000000 +0800
+++ binutils-2.33.1/binutils/strings.c	2019-11-24 11:46:10.000000000 +0800
@@ -613,7 +613,7 @@
 #ifdef HAVE_LONG_LONG
 	    if (sizeof (start) > sizeof (long))
 	      {
-# ifndef __MSVCRT__
+#if !defined(__MSVCRT__) || defined(__USE_MINGW_ANSI_STDIO)
 		printf ("%7llo ", (unsigned long long) start);
 # else
 		printf ("%7I64o ", (unsigned long long) start);
@@ -632,7 +632,7 @@
 #ifdef HAVE_LONG_LONG
 	    if (sizeof (start) > sizeof (long))
 	      {
-# ifndef __MSVCRT__
+#if !defined(__MSVCRT__) || defined(__USE_MINGW_ANSI_STDIO)
 		printf ("%7llu ", (unsigned long long) start);
 # else
 		printf ("%7I64d ", (unsigned long long) start);
@@ -651,7 +651,7 @@
 #ifdef HAVE_LONG_LONG
 	    if (sizeof (start) > sizeof (long))
 	      {
-# ifndef __MSVCRT__
+#if !defined(__MSVCRT__) || defined(__USE_MINGW_ANSI_STDIO)
 		printf ("%7llx ", (unsigned long long) start);
 # else
 		printf ("%7I64x ", (unsigned long long) start);
diff -urN binutils-2.33.1_orig/gas/as.h binutils-2.33.1/gas/as.h
--- binutils-2.33.1_orig/gas/as.h	2019-09-09 21:19:43.000000000 +0800
+++ binutils-2.33.1/gas/as.h	2019-11-24 11:46:10.000000000 +0800
@@ -447,10 +447,10 @@
 
 #define PRINTF_LIKE(FCN) \
   void FCN (const char *format, ...) \
-    __attribute__ ((__format__ (__printf__, 1, 2)))
+    __attribute__ ((__format__ (gnu_printf, 1, 2)))
 #define PRINTF_WHERE_LIKE(FCN) \
   void FCN (const char *file, unsigned int line, const char *format, ...) \
-    __attribute__ ((__format__ (__printf__, 3, 4)))
+    __attribute__ ((__format__ (gnu_printf, 3, 4)))
 
 #else /* __GNUC__ < 2 || defined(VMS) */
 
diff -urN binutils-2.33.1_orig/gas/read.c binutils-2.33.1/gas/read.c
--- binutils-2.33.1_orig/gas/read.c	2019-09-09 21:19:43.000000000 +0800
+++ binutils-2.33.1/gas/read.c	2019-11-24 11:46:10.000000000 +0800
@@ -4414,7 +4414,7 @@
 	{
 	  /* Leading bits contain both 0s & 1s.  */
 #if defined (BFD64) && BFD_HOST_64BIT_LONG_LONG
-#ifndef __MSVCRT__
+#if !defined(__MSVCRT__) || defined(__USE_MINGW_ANSI_STDIO)
 	  as_warn (_("value 0x%llx truncated to 0x%llx"),
 		   (unsigned long long) get, (unsigned long long) use);
 #else
diff -urN binutils-2.33.1_orig/gold/configure binutils-2.33.1/gold/configure
--- binutils-2.33.1_orig/gold/configure	2019-10-12 22:02:00.000000000 +0800
+++ binutils-2.33.1/gold/configure	2019-11-24 11:46:10.000000000 +0800
@@ -10052,7 +10052,7 @@
 /* end confdefs.h.  */
 
 template<typename T> extern void foo(const char*, ...)
-  __attribute__ ((__format__ (__printf__, 1, 2)));
+  __attribute__ ((__format__ (gnu_printf, 1, 2)));
 template<typename T> void foo(const char* format, ...) {}
 void bar() { foo<int>("%s\n", "foo"); }
 
diff -urN binutils-2.33.1_orig/gold/configure.ac binutils-2.33.1/gold/configure.ac
--- binutils-2.33.1_orig/gold/configure.ac	2019-09-09 21:19:44.000000000 +0800
+++ binutils-2.33.1/gold/configure.ac	2019-11-24 11:46:10.000000000 +0800
@@ -655,7 +655,7 @@
 [gold_cv_template_attribute],
 [AC_COMPILE_IFELSE([AC_LANG_SOURCE([
 template<typename T> extern void foo(const char*, ...)
-  __attribute__ ((__format__ (__printf__, 1, 2)));
+  __attribute__ ((__format__ (gnu_printf, 1, 2)));
 template<typename T> void foo(const char* format, ...) {}
 void bar() { foo<int>("%s\n", "foo"); }
 ])], [gold_cv_template_attribute=yes], [gold_cv_template_attribute=no])])
diff -urN binutils-2.33.1_orig/include/ansidecl.h binutils-2.33.1/include/ansidecl.h
--- binutils-2.33.1_orig/include/ansidecl.h	2019-09-09 21:19:44.000000000 +0800
+++ binutils-2.33.1/include/ansidecl.h	2019-11-24 11:46:10.000000000 +0800
@@ -195,7 +195,7 @@
    before GCC 3.3, but as of 3.3 we need to add the `nonnull'
    attribute to retain this behavior.  */
 #ifndef ATTRIBUTE_PRINTF
-#define ATTRIBUTE_PRINTF(m, n) __attribute__ ((__format__ (__printf__, m, n))) ATTRIBUTE_NONNULL(m)
+#define ATTRIBUTE_PRINTF(m, n) __attribute__ ((__format__ (gnu_printf, m, n))) ATTRIBUTE_NONNULL(m)
 #define ATTRIBUTE_PRINTF_1 ATTRIBUTE_PRINTF(1, 2)
 #define ATTRIBUTE_PRINTF_2 ATTRIBUTE_PRINTF(2, 3)
 #define ATTRIBUTE_PRINTF_3 ATTRIBUTE_PRINTF(3, 4)
@@ -223,7 +223,7 @@
    NULL format specifier was allowed as of gcc 3.3.  */
 #ifndef ATTRIBUTE_NULL_PRINTF
 # if (GCC_VERSION >= 3003)
-#  define ATTRIBUTE_NULL_PRINTF(m, n) __attribute__ ((__format__ (__printf__, m, n)))
+#  define ATTRIBUTE_NULL_PRINTF(m, n) __attribute__ ((__format__ (gnu_printf, m, n)))
 # else
 #  define ATTRIBUTE_NULL_PRINTF(m, n)
 # endif /* GNUC >= 3.3 */
